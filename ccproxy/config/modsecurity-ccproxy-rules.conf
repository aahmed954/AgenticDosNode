# ModSecurity rules for Claude Code Proxy
# Custom rules to protect against AI-specific attacks and abuse

# Include OWASP Core Rule Set
Include /etc/modsecurity.d/owasp-crs/crs-setup.conf
Include /etc/modsecurity.d/owasp-crs/rules/*.conf

# === Claude Code Proxy Specific Rules ===

# Rule 1000: Block excessive prompt injection attempts
SecRule REQUEST_BODY "@detectSQLi" \
    "id:1000,\
    phase:2,\
    block,\
    msg:'SQL Injection attempt in AI prompt',\
    logdata:'Matched Data: %{MATCHED_VAR} found within %{MATCHED_VAR_NAME}',\
    tag:'ai-security',\
    severity:'CRITICAL'"

# Rule 1001: Detect prompt injection patterns
SecRule REQUEST_BODY "@rx (?i)(ignore\s+previous|forget\s+everything|system\s+prompt|you\s+are\s+now|act\s+as\s+if)" \
    "id:1001,\
    phase:2,\
    pass,\
    msg:'Potential prompt injection detected',\
    logdata:'Matched Data: %{MATCHED_VAR}',\
    tag:'ai-security',\
    severity:'WARNING',\
    setvar:'tx.ai_injection_score=+1'"

# Rule 1002: Block excessively long prompts (potential DoS)
SecRule REQUEST_BODY "@gt 100000" \
    "id:1002,\
    phase:2,\
    block,\
    msg:'Request body too large - potential DoS',\
    tag:'ai-security',\
    severity:'HIGH'"

# Rule 1003: Rate limiting by content similarity (basic)
SecRule REQUEST_BODY "@rx (.{100,})" \
    "id:1003,\
    phase:2,\
    pass,\
    msg:'Tracking request content hash',\
    tag:'ai-security',\
    capture,\
    setvar:'tx.content_hash=%{sha1:%{matched_var}}',"

# Rule 1004: Block attempts to extract system information
SecRule REQUEST_BODY "@rx (?i)(system\s+info|environment\s+variables|config|debug\s+mode|internal\s+prompt)" \
    "id:1004,\
    phase:2,\
    block,\
    msg:'Attempt to extract system information',\
    logdata:'Matched Data: %{MATCHED_VAR}',\
    tag:'ai-security',\
    severity:'HIGH'"

# Rule 1005: Monitor for credential harvesting attempts
SecRule REQUEST_BODY "@rx (?i)(api\s*key|password|token|secret|credential)" \
    "id:1005,\
    phase:2,\
    pass,\
    msg:'Potential credential harvesting attempt',\
    logdata:'Matched Data: %{MATCHED_VAR}',\
    tag:'ai-security',\
    severity:'WARNING'"

# Rule 1006: Block requests with suspicious user agents
SecRule REQUEST_HEADERS:User-Agent "@rx (?i)(bot|crawler|scanner|automated)" \
    "id:1006,\
    phase:1,\
    block,\
    msg:'Suspicious user agent blocked',\
    tag:'ai-security',\
    severity:'MEDIUM'"

# Rule 1007: Enforce authentication header presence
SecRule &REQUEST_HEADERS:Authorization "@eq 0" \
    "id:1007,\
    phase:1,\
    block,\
    msg:'Missing authorization header',\
    tag:'ai-security',\
    severity:'HIGH'"

# Rule 1008: Monitor for jailbreaking attempts
SecRule REQUEST_BODY "@rx (?i)(jailbreak|bypass\s+restriction|override\s+safety|disable\s+filter)" \
    "id:1008,\
    phase:2,\
    pass,\
    msg:'Potential AI jailbreaking attempt',\
    logdata:'Matched Data: %{MATCHED_VAR}',\
    tag:'ai-security',\
    severity:'HIGH',\
    setvar:'tx.jailbreak_score=+1'"

# Rule 1009: Block known malicious patterns
SecRule REQUEST_BODY "@pmFromFile /etc/modsecurity.d/malicious-ai-patterns.txt" \
    "id:1009,\
    phase:2,\
    block,\
    msg:'Known malicious AI pattern detected',\
    tag:'ai-security',\
    severity:'CRITICAL'"

# Rule 1010: Cumulative scoring for suspicious activity
SecRule TX:ai_injection_score "@gt 2" \
    "id:1010,\
    phase:5,\
    block,\
    msg:'High AI injection score - potential attack',\
    tag:'ai-security',\
    severity:'HIGH'"

# Rule 1011: JSON structure validation for API requests
SecRule REQUEST_HEADERS:Content-Type "@rx application/json" \
    "id:1011,\
    phase:2,\
    pass,\
    msg:'Validating JSON structure',\
    chain"
SecRule REQUEST_BODY "@validateByteRange 1-255" \
    "t:none,\
    block,\
    msg:'Invalid JSON characters detected',\
    tag:'ai-security',\
    severity:'MEDIUM'"

# Rule 1012: Block excessive streaming requests from single IP
SecRule REQUEST_URI "@streq /v1/chat/completions" \
    "id:1012,\
    phase:1,\
    pass,\
    msg:'Tracking streaming requests',\
    setvar:'ip.stream_count=+1',\
    expirevar:'ip.stream_count=300'"

SecRule IP:stream_count "@gt 10" \
    "id:1013,\
    phase:1,\
    block,\
    msg:'Too many streaming requests from IP',\
    tag:'ai-security',\
    severity:'HIGH'"

# === Response Filtering ===

# Rule 2000: Monitor for sensitive information in responses
SecRule RESPONSE_BODY "@rx (?i)(api\s*key|password|token|secret)" \
    "id:2000,\
    phase:4,\
    pass,\
    msg:'Sensitive information in AI response',\
    logdata:'Matched Data: %{MATCHED_VAR}',\
    tag:'ai-security',\
    severity:'WARNING'"

# Rule 2001: Block responses that might contain system information
SecRule RESPONSE_BODY "@rx (?i)(internal\s+error|stack\s+trace|database\s+error|file\s+path)" \
    "id:2001,\
    phase:4,\
    block,\
    msg:'System information in response',\
    tag:'ai-security',\
    severity:'HIGH'"

# === Audit Log Configuration ===
SecAuditEngine RelevantOnly
SecAuditLogRelevantStatus "^(?:5|4(?!04))"
SecAuditLogParts ABIJDEFHZ
SecAuditLogType Serial
SecAuditLog /var/log/modsecurity/audit.log

# Debug log (disable in production)
# SecDebugLog /var/log/modsecurity/debug.log
# SecDebugLogLevel 3